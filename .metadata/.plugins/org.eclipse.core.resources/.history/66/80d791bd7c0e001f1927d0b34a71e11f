package com.spring1.ctrl;

import java.util.ArrayList;
import java.util.List;

import org.json.simple.parser.JSONParser;
import org.json.simple.JSONObject;
import org.json.simple.parser.ParseException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.util.JSONPObject;
import com.spring1.dto.Classroom;
import com.spring1.dto.Store;
import com.spring1.dto.Student;
import com.spring1.service.SampleService;
import com.spring1.service.StoreService;
import com.spring1.vo.Maker;

@RestController
@RequestMapping("/api/")
public class RestfulController {

	private static final Logger log = LoggerFactory.getLogger(RestfulController.class);
	@Autowired
	private SampleService sampleService;
	
	@Autowired
	private StoreService storeService;
	
	@GetMapping("api1.do")
	public Store getApi1() {
		Store store = new Store(1,"제목");
		return store;
	}
	
	@GetMapping("api2.do")
	public int getApi2() {
		return 1004;
	}
	
	@GetMapping("api3.do")
	public List<Store> getApi3() {
		Store store1 = new Store(1,"Emart");
		Store store2 = new Store(2,"Amart");
		Store store3 = new Store(3,"Bmart");
		List<Store> storelist = new ArrayList<>();
		storelist.add(store1);
		storelist.add(store2);
		storelist.add(store3);
		return storelist;
	}
	
	@GetMapping("api4.do")
	public Maker getApi4() {
		Store store1 = new Store(1,"Emart");
		Store store2 = new Store(2,"Amart");
		Store store3 = new Store(3,"Bmart");
		ArrayList<Store> storelist = new ArrayList<>();
		storelist.add(store1);
		storelist.add(store2);
		storelist.add(store3);
		Maker maker = new Maker("abc",1, storelist);
		return maker;
	}
	
	@PostMapping("api5.do")
	public Store postApi5(@RequestBody Store store) {
		storeService.insStore(store);
		log.info("번호 : "+store.getStoreNum());
		log.info("이름 : "+store.getStoreName());
		return store;
	}
	
//	@GetMapping("api6.do")
//	public List<Sample> postApi5() {
//		List<Sample> testList = sampleService.getSampleList(); 
//		return testList;
//	}
	
	@PostMapping("api6.do")
	public String postStudent(@RequestBody Student std) {
		String response = String.format("\n<학생정보>\n이름 : %s\n번호 : %d\n나이 : %d", std.getName(), std.getStdNumber(),std.getAge());
		log.info("postStudent response :" + response);
		return response;
	}
	
	@PostMapping("api7.do")
	public String postAllStudent(@RequestBody List<Student> stds) {
		String response = "\n<학급 정보>\n";
		int i = 1;
		for(Student s : stds) {
			response += String.format("학생%d: 이름 : %s\t번호 : %d\t나이 : %d\n", i, s.getName(), s.getStdNumber(), s.getAge()); 
			i++;
		}
		log.info("postAllStudent response : "+response);
		return response;
	}
	
	@PostMapping("api8.do")
	public String postClassroom(@RequestBody Classroom team) {
		String response =  String.format("\n<팀 정보>\n학과명 : %s\n : %d\n", team.getPart(), team.getClassNum());
		int i= 1;
		for (Student s : team.getStudents()) {
			response += String.format("학생%d: 이름 : %s\t번호 : %d\t나이 : %d\n",i, s.getName(), s.getStdNumber(), s.getAge());
			i++;
		}
		log.info("postClassroom response : "+response);
		return response;
	}
	
	@PostMapping("api9.do")
	public Student converStringToStudent1(@RequestBody String jsonStr) throws ParseException{
		JSONParser jsonParser = new JSONParser();
		JSONPObject jsonObject = (JSONPObject) jsonParser.parse(jsonStr);
		
		Student std = new Student(Integer.valueOf(jsonObject.get("stdNumber").toString()),
				jsonObject.get("name").toString(),
				Integer.valueOf(jsonObject.get("age").toString()));
		log.info("convertStringToStudent1 response :"+std);
		return std;
	}
	
	@PostMapping("api10.do")
	public String converStringToString1(@RequestBody Student std) {
		JSONPObject jsonPlayer = new JSONObject();
		jsonPlayer.put("stdNumber",std.getStdNumber());
		jsonPlayer.put("name",std.getName());
		jsonPlayer.put("age",std.getAge());
		String jsonStr = jsonPlayer.toJSONString();
		log.info("convertStudentToString1 result :"+jsonStr);
		return jsonStr;
	}
}

